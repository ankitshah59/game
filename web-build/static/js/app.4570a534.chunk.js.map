{"version":3,"sources":["src/PlayScreen.js","App.js","web-build/register-service-worker.js","src/signs/rock.png","src/signs/scissors.png","src/signs/paper.png"],"names":["rock","require","scissors","paper","bgColors","styles","StyleSheet","create","container","flex","alignItems","justifyContent","counter","fontSize","color","marginBottom","button","position","bottom","sign","width","height","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","View","style","compose","backgroundColor","Image","source","Math","floor","random","Button","onPress","title","Text","App","play","setPlay","header","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"0MAEMA,EAAOC,EAAQ,IACfC,EAAWD,EAAQ,IACnBE,EAAQF,EAAQ,IAEhBG,EAAW,CAAC,UAAU,UAAU,WAiDhCC,EAASC,IAAWC,OAAO,CAC7BC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,UAGlBC,QAAQ,CACNC,SAAU,IACVC,MAAO,QACPC,aAAa,IAEfC,OAAO,CACLC,SAAU,WACVC,OAAQ,IAEVC,KAAK,CACDC,MAAM,IACNC,OAAQ,OAKDC,EA9DI,WAAM,IAAD,EACSC,mBAAS,GADlB,WACbX,EADa,KACLY,EADK,KAkBtB,OAhBEC,qBAAU,WAGN,GAAe,IAAZb,EAAH,CAIA,IAAMc,EAAQC,YAAW,WACrBH,GAAW,SAACI,GAAD,OAASA,EAAK,OAC3B,KAEF,OAAO,WACHC,aAAaH,OAEnB,CAACd,IAGH,kBAACkB,EAAA,EAAD,CAAMC,MAAOzB,IAAW0B,QACpB,CAACC,gBAAiB7B,EAASQ,EAAQ,IAClCP,EAAOG,YAGTI,EAAU,EACR,oCACA,kBAACsB,EAAA,EAAD,CAAOH,MAAS1B,EAAOc,KAAMgB,OAjCnB,CAACnC,EAAKG,EAAMD,GACZkC,KAAKC,MAAoB,EAAdD,KAAKE,aAiC1B,kBAACR,EAAA,EAAD,CAAMC,MAAS1B,EAAOW,QACtB,kBAACuB,EAAA,EAAD,CAAQC,QAAS,kBAAIhB,EAAW,IAAIiB,MAAQ,iBAG5C,kBAACC,EAAA,EAAD,CAAMX,MAAS1B,EAAOO,SAAUA,KCzC1B,SAAS+B,IAAO,IAAD,EACLpB,oBAAS,GADJ,WACrBqB,EADqB,KAChBC,EADgB,KAE5B,OACED,EACE,kBAAC,EAAD,MAEA,kBAACd,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,WACpB,kBAACkC,EAAA,EAAD,CAAMX,MAAO1B,EAAOyC,QAApB,sBACA,kBAACJ,EAAA,EAAD,CAAMX,MAAO,CAAClB,SAAS,KAAvB,8BACA,kBAACiB,EAAA,EAAD,CAAMC,MAAS1B,EAAOW,QACtB,kBAACuB,EAAA,EAAD,CAAQE,MAAQ,OAAOD,QAAS,kBAAIK,GAAQ,QAWlD,IAAMxC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNwB,gBAAiB,OACjBvB,WAAY,SACZC,eAAgB,UAGlBmC,OAAO,CACLjC,SAAU,GACVE,aAAa,IAEfC,OAAO,CACL+B,UAAU,GACV3B,MAAO,Q,2DCvCP,kBAAmB4B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,U,mBCV1DE,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.4570a534.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { StyleSheet, Text, View,Button, Image} from 'react-native';\nconst rock = require('./signs/rock.png');\nconst scissors = require('./signs/scissors.png');\nconst paper = require('./signs/paper.png');\n\nconst bgColors = ['#3498db','#f1c40f','#c0392b']; \n\nconst randomImg = () => {\n    const emojis = [rock,paper,scissors]\n    const random = Math.floor(Math.random()*3)\n   // console.log(random);\n    return emojis[random];\n}\n\n\nconst PlayScreen = ()=> {\n    const [counter,setCounter] = useState(3)\n    useEffect(()=>{\n       // console.log(counter);\n\n        if(counter === 0){\n            return;\n        }\n\n        const timer = setTimeout(() =>{\n            setCounter((prv) => prv -1)\n        },500);\n\n        return () =>{\n            clearTimeout(timer)\n        };\n    },[counter]);\n    \n  return (\n    <View style={StyleSheet.compose(\n        {backgroundColor: bgColors[counter-1]},\n         styles.container\n         )}>\n      \n     {(counter < 1) ? (\n         <>\n         <Image style = {styles.sign} source = {randomImg()} />\n         <View style = {styles.button}>\n         <Button onPress={()=>setCounter(3)} title = \"Play Again\"/>\n         </View>\n         </>\n     ) : <Text style = {styles.counter}>{counter}</Text>}\n      \n      </View>\n   \n  \n  );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  \n    counter:{\n      fontSize: 150,\n      color: \"white\",\n      marginBottom:10\n    },\n    button:{\n      position: \"absolute\",\n      bottom: 40,\n    },\n    sign:{\n        width:250,\n        height: 250,\n    }\n  \n  });\n\nexport default PlayScreen;","import { StatusBar } from 'expo-status-bar';\nimport React,{useState} from 'react';\nimport { StyleSheet, Text, View,Button } from 'react-native';\nimport PlayScreen from './src/PlayScreen';\n\n\nexport default function App() {\n  const [play,setPlay] = useState(false)\n  return (\n    play ? (\n      <PlayScreen/>\n    ) : (\n      <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissor</Text>\n      <Text style={{fontSize:65}}>✊ ✋ ✌️</Text>\n      <View style = {styles.button}>\n      <Button title = \"Play\" onPress={()=>setPlay(true)}/>\n      </View>\n   \n    </View>\n    )\n   \n \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  header:{\n    fontSize: 30,\n    marginBottom:10\n  },\n  button:{\n    marginTop:30,\n    width: 250\n  }\n\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/rock.864b5a2a.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.48d238a6.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.cffb3100.png\";"],"sourceRoot":""}